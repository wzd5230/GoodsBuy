<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="cn.wzd.mapper.OrderUser">

	<!-- 定义order表关联user表的resultMap -->
	<resultMap type="orders" id="OrderAndUserResultMap">
		<!-- resultMap中唯一标识的映射 -->
		<id column="orders_id" property="id"/>
		<!-- 其他普通映射 -->
		<result column="orders_user_id" property="user_id"/>
		<result column="orders_number" property="number"/>
		<result column="orders_createtime" property="createtime"/>
		<result column="orders_note" property="note"/>
		<!-- 一对一关联查询user属性的映射 -->
		<association property="user" javaType="user">
			<id column="user_id" property="id"/>
			
			<result column="user_username" property="username"/>
			<result column="user_birthday" property="birthday"/>
			<result column="user_sex" property="sex"/>
			<result column="user_address" property="address"/>
		</association>
	</resultMap>
	
	<!-- 查询user关联查询order表的映射 -->
	<resultMap type="user" id="UserAndOrdersResultMap">
		<id column="user_id" property="id"/>
		<result column="user_username" property="username"/>
		<result column="user_sex" property="sex"/>
		<result column="user_birthday" property="birthday"/>
		<result column="user_address" property="address"/>
		
		<!-- 一个用户有多个订单，一对多关系，需要使用collection -->
		<collection property="orders" ofType="orders">
			<id column="orders_id" property="id"/>
			
			<result column="orders_user_id" property="user_id"/>
			<result column="orders_number" property="number"/>
			<result column="orders_createtime" property="createtime"/>
			<result column="orders_note" property="note"/>
		</collection>
	</resultMap>
	
	<!-- 查询用户表关联查询商品表的映射 -->
	<resultMap type="user" id="UserAndItemsResultMap">
		<!-- 查询返回表中的唯一标识列的映射 -->
		<id column="user_id" property="id"/>
		
		<!-- 其他普通列的映射 -->
		<result column="user_username" property="username"/>
		<result column="user_birthday" property="birthday"/>
		<result column="user_sex" property="sex"/>
		<result column="user_address" property="address"/>
		
		<!-- 关联的订单表，一对多，使用collection -->
		<collection property="orders" ofType="orders">
			<id column="orders_id" property="id"/>
			
			<result column="orders_number" property="number"/>
			<result column="orders_createtime" property="createtime"/>
			<result column="orders_note" property="note"/>	
			
			<!-- 关联查询订单详细表，一对多，使用collection -->
			<collection property="orderDetails" ofType="orderDetail">
				<id column="orderdetail_id" property="id"/>
				
				<result column="orderdetail_items_num" property="items_num"/>
				
				<!-- 关联查询商品详细表，一对一，使用association -->
				<association property="items" javaType="items">
					<id column="items_id" property="id"/>
					
					<result column="items_name" property="name"/>
					<result column="items_price" property="price"/>
					<result column="items_detail" property="detail"/>
				</association>
			</collection>
		</collection>
	</resultMap>

	<!-- 查询order表关联查询user表 -->
	<select id="findOrderAndUserResultMap" resultMap="OrderAndUserResultMap">
	SELECT
		orders.id AS orders_id,
		orders.user_id AS orders_user_id,
		orders.number AS orders_number,
		orders.createtime AS orders_createtime,
		orders.note orders_note,
		user.id AS user_id,
		user.username AS user_username,
		user.sex AS user_sex,
		user.birthday AS user_birthday,
		user.address AS user_address
	FROM
		orders,USER
	WHERE
		orders.user_id=user.id
	</select>
	
	<!-- 查询user表关联查询Order表 -->
	<select id="findUserAndOrdersResultMap" resultMap="UserAndOrdersResultMap">
	SELECT
		orders.id AS orders_id,
		orders.user_id AS orders_user_id,
		orders.number AS orders_number,
		orders.createtime AS orders_createtime,
		orders.note orders_note,
		user.id AS user_id,
		user.username AS user_username,
		user.sex AS user_sex,
		user.birthday AS user_birthday,
		user.address AS user_address
	FROM
		orders,USER
	WHERE
		orders.user_id=user.id
	</select>
	
	<!-- 查询user表，关联查询items表 -->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
	SELECT
	  user.id AS user_id,
	  user.username AS user_username,
	  user.birthday AS user_birthday,
	  user.sex AS user_sex,
	  user.address AS user_address,
	  
	  orders.id AS orders_id,
	  orders.number AS orders_number,
	  orders.createtime AS orders_createtime,
	  orders.note AS orders_note,
	  
	  orderdetail.id AS orderdetail_id,
	  orderdetail.items_num AS orderdetail_items_num,
	  
	  items.id AS items_id,
	  items.name AS items_name,
	  items.price AS items_price,
	  items.detail AS items_detail
	FROM
	  user AS user,
	  orders AS orders,
	  orderdetail AS orderdetail,
	  items AS items
	WHERE
	  user.id=orders.user_id
	AND
	  orderdetail.orders_id=orders.id
	AND
	  orderdetail.items_id=items.id;
	</select>



</mapper>